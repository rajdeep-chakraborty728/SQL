/****************************************************************************************** */
/* MODIFICATION LOG */
/* Version       Developer         Date                 Description */
/*------------------------------------------------------------------------------------------- */
/* 1            Rajdeep            22-Nov-2021          Initial Version */
/****************************************************************************************** */

USE ${EnvVarTargetDatabase};

--------------------------------------------------------------------------------------------------------
---Whole Snapshot Building is Considered Using America/LA Timezone For Critical SF Timestamp Columns----

-- CREATED_DATE
-- LAST_MODIFIED_DATE
-- SYSTEM_MODSTAMP

--------------------------------------------------------------------------------------------------------

SET SNAPSHOT_TABLE= '${JobVarSnapshotTable}';
SET SNAPSHOT_SCHEMA= '${JobVarSnapshotSchema}';
SET SNAPSHOT_TABLE_FULL_QUALIFIER=$SNAPSHOT_SCHEMA||'.'||$SNAPSHOT_TABLE;

SET SAT_TABLE='${JobVarSAT}';
SET SAT_SCHEMA='${JobVarDVSchema}';
SET SAT_TABLE_FULL_QUALIFIER=$SAT_SCHEMA||'.'||$SAT_TABLE;

SET HUB_TABLE='${JobVarHUB}';
SET HUB_SCHEMA='${JobVarDVSchema}';
SET HUB_TABLE_FULL_QUALIFIER=$HUB_SCHEMA||'.'||$HUB_TABLE;

SET DELTA_SNAPSHOT_TABLE= '${JobVarSnapshotTableDelta}';
SET DELTA_SNAPSHOT_SCHEMA= '${JobVarSnapshotSchema}';
SET DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER=$DELTA_SNAPSHOT_SCHEMA||'.'||$DELTA_SNAPSHOT_TABLE; 

SET DELTA_MAX_SNAP_DATE_KEY=(SELECT TO_NUMERIC(TO_VARCHAR(MAX(FISCAL_MONTH_END_DATE),'YYYYMMDD')) FROM identifier($SNAPSHOT_TABLE_FULL_QUALIFIER) WHERE 1=1 ); 
SET DELTA_END_DATE_KEY = 0; 

DROP TABLE IF EXISTS identifier($DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER);
CREATE TABLE identifier($DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER)
AS
WITH 
CTE_DATE_DIM AS 
(
  SELECT 
    T.DATE,
    T.DATE_KEY,
    T.FISCAL_DATE,
    T.FISCAL_YEAR,
    T.FISCAL_QUARTER,
    T.FISCAL_QUARTER_NUM,
    T.FISCAL_QUARTER_START_DATE,
    T.FISCAL_QUARTER_END_DATE,
    T.FISCAL_MONTH_NUM,
    T.FISCAL_MONTH,
    T.FISCAL_MONTH_START_DATE,
    T.FISCAL_MONTH_END_DATE,
    T.FISCAL_WEEK_PERIOD,
    T.FISCAL_WEEK,
    T.FISCAL_WEEK_START_DATE,
    T.FISCAL_WEEK_END_DATE,
    CASE WHEN FISCAL_DATE = FISCAL_QUARTER_START_DATE   THEN 'Y' ELSE 'N' END AS FISCAL_QTR_STRT_IND,
    CASE WHEN FISCAL_DATE = FISCAL_QUARTER_END_DATE     THEN 'Y' ELSE 'N' END AS FISCAL_QTR_END_IND,
    CASE WHEN FISCAL_DATE = FISCAL_MONTH_START_DATE     THEN 'Y' ELSE 'N' END AS FISCAL_MO_STRT_IND,
    CASE WHEN FISCAL_DATE = FISCAL_MONTH_END_DATE       THEN 'Y' ELSE 'N' END AS FISCAL_MO_END_IND,
    CASE WHEN FISCAL_DATE = FISCAL_WEEK_START_DATE      THEN 'Y' ELSE 'N' END AS FISCAL_WK_STRT_IND,
    CASE WHEN FISCAL_DATE = FISCAL_WEEK_END_DATE        THEN 'Y' ELSE 'N' END AS FISCAL_WK_END_IND
  FROM
  (
    SELECT
    S.DATE,
    S.DATE_KEY,
    S.FISCAL_DATE,
    S.FISCAL_YEAR,
    S.FISCAL_QUARTER,
    S.FISCAL_QUARTER_NUM,
    S.FISCAL_QUARTER_START_DATE,
    S.FISCAL_QUARTER_END_DATE,
    S.FISCAL_MONTH_NUM,
    S.FISCAL_MONTH,
    S.FISCAL_MONTH_START_DATE,
    S.FISCAL_MONTH_END_DATE,
    S.FISCAL_WEEK_PERIOD,
    S.FISCAL_WEEK,
    FIRST_VALUE(S.DATE) OVER(PARTITION BY S.FISCAL_WEEK ORDER BY S.DATE ASC) AS FISCAL_WEEK_START_DATE,
    LAST_VALUE(S.DATE) OVER(PARTITION BY S.FISCAL_WEEK ORDER BY S.DATE ASC) AS FISCAL_WEEK_END_DATE
    FROM
    (
      SELECT 
        DT.DATE,
        DT.DATE_KEY,
        DT.FISCAL_DATE,
        DT.FISCAL_YEAR,
        DT.FISCAL_QUARTER,
        DT.FISCAL_QUARTER_NUM,
        DT.FISCAL_QUARTER_START_DATE,
        DT.FISCAL_QUARTER_END_DATE,
        DT.FISCAL_YEAR||'-'||LPAD(DT.FISCAL_MONTH_NUM,2,'0') AS FISCAL_MONTH,
        DT.FISCAL_MONTH_NUM,
        DT.FISCAL_MONTH_START_DATE,
        DT.FISCAL_MONTH_END_DATE,
        DT.FISCAL_WEEK_PERIOD,
        DT.FISCAL_YEAR||'-'||DT.FISCAL_QUARTER_NUM||'-'||DT.FISCAL_WEEK_PERIOD AS FISCAL_WEEK
      FROM "PRD_INFO_MART_DIM"."DATE_DIM" DT
      WHERE 1=1
    ) S
    WHERE 1=1 
  ) T
  WHERE 1=1
),
CTE_DELTA_END_DATE_KEY AS
(
 SELECT
    TO_NUMERIC(TO_VARCHAR(DATEADD(day,-1,FISCAL_MONTH_START_DATE),'YYYYMMDD')) AS DELTA_END_DATE_KEY
 FROM
 CTE_DATE_DIM
 WHERE 1=1
 AND DATE_KEY=TO_NUMERIC(TO_VARCHAR(CURRENT_DATE,'YYYYMMDD')) 
),
CTE_DATE_DIM_CUSTOM AS
(
  SELECT 
    T.DATE,
    T.DATE_KEY,
    T.FISCAL_DATE,
    T.FISCAL_YEAR,
    T.FISCAL_QUARTER,
    T.FISCAL_QUARTER_START_DATE,
    T.FISCAL_QUARTER_END_DATE,
    T.FISCAL_MONTH,
    T.FISCAL_MONTH_START_DATE,
    T.FISCAL_MONTH_END_DATE,
    T.FISCAL_WEEK,
    T.FISCAL_WEEK_START_DATE,
    T.FISCAL_WEEK_END_DATE,
    T.FISCAL_QTR_STRT_IND,
    T.FISCAL_QTR_END_IND,
    T.FISCAL_MO_STRT_IND,
    T.FISCAL_MO_END_IND,
    T.FISCAL_WK_STRT_IND,
    T.FISCAL_WK_END_IND
  FROM CTE_DATE_DIM T
  WHERE 1=1
  AND T.DATE_KEY >= $DELTA_MAX_SNAP_DATE_KEY
  AND T.DATE_KEY <= (SELECT DELTA_END_DATE_KEY FROM CTE_DELTA_END_DATE_KEY)
),
CTE_MONTH_DIM_CUSTOM AS
(
  SELECT 
    T.DATE,
    T.DATE_KEY,
    T.FISCAL_DATE,
    T.FISCAL_YEAR,
    T.FISCAL_QUARTER,
    T.FISCAL_QUARTER_START_DATE,
    T.FISCAL_QUARTER_END_DATE,
    T.FISCAL_MONTH,
    T.FISCAL_MONTH_START_DATE,
    T.FISCAL_MONTH_END_DATE,
    T.FISCAL_WEEK,
    T.FISCAL_WEEK_START_DATE,
    T.FISCAL_WEEK_END_DATE,
    T.FISCAL_QTR_STRT_IND,
    T.FISCAL_QTR_END_IND,
    T.FISCAL_MO_STRT_IND,
    T.FISCAL_MO_END_IND,
    T.FISCAL_WK_STRT_IND,
    T.FISCAL_WK_END_IND
  FROM CTE_DATE_DIM_CUSTOM T
  WHERE 1=1
  AND T.FISCAL_MO_END_IND = 'Y'
),
CTE_MONTH_END_TRANSACTION_SAT_CONVERT_TIME AS
(
  SELECT 
  SAT.* 
  /*
  ,CONVERT_TIMEZONE('America/Los_Angeles','UTC', LOAD_DATE::timestamp_ntz)              AS LOAD_DATE_UTZ
  ,CASE
    WHEN TO_VARCHAR(DV_HARD_DELETED_DATE,'YYYY-MM-DD') != '9999-12-31'     
    THEN CONVERT_TIMEZONE('America/Los_Angeles','UTC', DV_HARD_DELETED_DATE::timestamp_ntz)  
    ELSE DV_HARD_DELETED_DATE
  END AS DV_HARD_DELETED_DATE_UTZ
  */
  ,CONVERT_TIMEZONE('UTC','America/Los_Angeles',CREATED_DATE::timestamp_ntz)              AS CREATED_DATE_AM_LA
  ,CONVERT_TIMEZONE('UTC','America/Los_Angeles',LAST_MODIFIED_DATE::timestamp_ntz)        AS LAST_MODIFIED_DATE_AM_LA
  ,CONVERT_TIMEZONE('UTC','America/Los_Angeles',SYSTEM_MODSTAMP::timestamp_ntz)           AS SYSTEM_MODSTAMP_AM_LA
  FROM identifier($SAT_TABLE_FULL_QUALIFIER) SAT
  WHERE 1=1
  AND TO_NUMBER(TO_CHAR(SAT.LOAD_DATE,'YYYYMMDD')) > $DELTA_MAX_SNAP_DATE_KEY
  AND TO_NUMBER(TO_CHAR(SAT.LOAD_DATE,'YYYYMMDD')) <= (SELECT DELTA_END_DATE_KEY FROM CTE_DELTA_END_DATE_KEY)
),
CTE_DELTA_MONTH_END_TRNSACTION_DV AS
(
	SELECT 
		 SAT.OPPORTUNITY_HASHKEY                                                    AS OPPORTUNITY_HASHKEY
		,HUB.Id                                                                     AS OPPORTUNITY_ID
        ,DT.DATE_KEY                                                                AS DATE_KEY
        ,DT.FISCAL_MONTH                                                            AS FISCAL_MONTH
        ,DT.FISCAL_MONTH_START_DATE                                                 AS FISCAL_MONTH_START_DATE
        ,DT.FISCAL_MONTH_END_DATE                                                   AS FISCAL_MONTH_END_DATE
        ,DT.FISCAL_QUARTER_START_DATE                                               AS FISCAL_QUARTER_START_DATE
        ,DT.FISCAL_QUARTER_END_DATE                                                 AS FISCAL_QUARTER_END_DATE
		,SAT.LOAD_DATE                                                              AS LOAD_DATE_TIMESTAMP
		,TO_DATE(TO_CHAR(SAT.LOAD_DATE,'YYYY-MM-DD'),'YYYY-MM-DD')                  AS LOAD_DATE
		,SAT.SYSTEM_MODSTAMP_AM_LA                                                  AS SYSTEM_MODSTAMP 
		,TO_DATE(TO_CHAR(SAT.SYSTEM_MODSTAMP_AM_LA,'YYYY-MM-DD'),'YYYY-MM-DD')      AS SYSTEM_MODSTAMP_DATE
        ,SAT.LAST_MODIFIED_DATE_AM_LA                                               AS LAST_MODIFIED_TIMESTAMP 
		,TO_DATE(TO_CHAR(SAT.LAST_MODIFIED_DATE_AM_LA,'YYYY-MM-DD'),'YYYY-MM-DD')   AS LAST_MODIFIED_DATE
		,SAT.CREATED_DATE_AM_LA                                                     AS CREATED_DATE_TIMESTAMP
		,TO_DATE(TO_CHAR(SAT.CREATED_DATE_AM_LA,'YYYY-MM-DD'),'YYYY-MM-DD')         AS CREATED_DATE
        ,DT_CR.FISCAL_MONTH                                                         AS CREATED_DATE_FISCAL_MONTH
        ,DT_CR.FISCAL_MONTH_START_DATE                                              AS CREATED_DATE_FISCAL_MONTH_START_DATE
        ,DT_CR.FISCAL_MONTH_END_DATE                                                AS CREATED_DATE_FISCAL_MONTH_END_DATE
		,SAT.CLOSE_DATE                                                             AS CLOSE_DATE
		,SAT."NAME"                                                                 AS "NAME"
		,SAT.SOURCED_BY                                                             AS SOURCED_BY
		,SAT.STAGE_NAME                                                             AS STAGE_NAME
		,SAT."TYPE"                                                                 AS "TYPE"
		,SAT.LEAD_SOURCE                                                            AS LEAD_SOURCE                                                            
		,SAT.FORECAST_SALES_ACV                                                     AS FORECAST_SALES_ACV
		,SAT.INFLUENCED_BY                                                          AS INFLUENCED_BY
		,SAT.INFLUENCED_VALUE_CUSTOMER_SUCCESS                                      AS INFLUENCED_VALUE_CUSTOMER_SUCCESS
		,SAT.INFLUENCED_VALUE_MARKETING                                             AS INFLUENCED_VALUE_MARKETING
		,SAT.INFLUENCED_VALUE_PARTNER                                               AS INFLUENCED_VALUE_PARTNER
		,SAT.INFLUENCED_VALUE_SDR                                                   AS INFLUENCED_VALUE_SDR
        ,SAT.ACCOUNT_ID																AS ACCOUNT_ID
        ,SAT.OWNER_ID																AS OWNER_ID
		,SAT.IS_DELETED                                                             AS IS_DELETED
		,SAT.DV_HARD_DELETED                                                        AS DV_HARD_DELETED
		,SAT.DV_HARD_DELETED_DATE :: date                                                                                           AS DV_HARD_DELETED_DATE
        ,CASE 
            WHEN TO_CHAR(SAT.DV_HARD_DELETED_DATE :: date,'YYYY-MM-DD') = '9999-12-31' THEN SAT.DV_HARD_DELETED_DATE :: date
            ELSE DT_DEL.FISCAL_MONTH_START_DATE 
         END                                                                                                                        AS DELETED_DATE_FISCAL_MONTH_START_DATE
        ,CASE 
            WHEN TO_CHAR(SAT.DV_HARD_DELETED_DATE :: date,'YYYY-MM-DD') = '9999-12-31' THEN SAT.DV_HARD_DELETED_DATE :: date
            ELSE DT_DEL.FISCAL_MONTH_END_DATE 
         END                                                                                                                        AS DELETED_DATE_FISCAL_MONTH_END_DATE
		,ROW_NUMBER() OVER(PARTITION BY SAT.OPPORTUNITY_HASHKEY,DT.FISCAL_MONTH_END_DATE ORDER BY SAT.LOAD_DATE DESC)               AS RN 
	FROM CTE_MONTH_END_TRANSACTION_SAT_CONVERT_TIME SAT
	LEFT JOIN identifier($HUB_TABLE_FULL_QUALIFIER) HUB
	ON (SAT.OPPORTUNITY_HASHKEY = HUB.OPPORTUNITY_HASHKEY)
    LEFT JOIN CTE_DATE_DIM_CUSTOM DT 
    ON (TO_DATE(TO_CHAR(SAT.LOAD_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') = DT.FISCAL_DATE)
    LEFT JOIN CTE_DATE_DIM DT_CR 
    ON (TO_DATE(TO_CHAR(SAT.CREATED_DATE_AM_LA,'YYYY-MM-DD'),'YYYY-MM-DD') = DT_CR.FISCAL_DATE)
    LEFT JOIN CTE_DATE_DIM_CUSTOM DT_DEL 
    ON (TO_DATE(TO_CHAR(SAT.DV_HARD_DELETED_DATE :: date,'YYYY-MM-DD'),'YYYY-MM-DD') = DT_DEL.FISCAL_DATE) 
),
CTE_DIS_OPP AS
(
   SELECT 
     DIS_OPP.OPPORTUNITY_HASHKEY                      AS OPPORTUNITY_HASHKEY
    ,DIS_OPP.OPPORTUNITY_ID                           AS OPPORTUNITY_ID
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH                AS CREATED_DATE_FISCAL_MONTH
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_START_DATE     AS CREATED_DATE_FISCAL_MONTH_START_DATE
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_END_DATE       AS CREATED_DATE_FISCAL_MONTH_END_DATE
    ,DIS_OPP.CREATED_DATE                             AS CREATED_DATE
    ,MIN(DV_HARD_DELETED_DATE)                        AS DV_HARD_DELETED_DATE
    ,MIN(DELETED_DATE_FISCAL_MONTH_START_DATE)        AS DELETED_DATE_FISCAL_MONTH_START_DATE
    ,MIN(DELETED_DATE_FISCAL_MONTH_END_DATE)          AS DELETED_DATE_FISCAL_MONTH_END_DATE
   FROM 
   (
     SELECT 
       DIS_OPP.OPPORTUNITY_HASHKEY                    AS OPPORTUNITY_HASHKEY
      ,DIS_OPP.OPPORTUNITY_ID                         AS OPPORTUNITY_ID
      ,DIS_OPP.CREATED_DATE_FISCAL_MONTH              AS CREATED_DATE_FISCAL_MONTH
      ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_START_DATE   AS CREATED_DATE_FISCAL_MONTH_START_DATE
      ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_END_DATE     AS CREATED_DATE_FISCAL_MONTH_END_DATE
      ,DIS_OPP.CREATED_DATE                           AS CREATED_DATE
      ,DV_HARD_DELETED_DATE                           AS DV_HARD_DELETED_DATE
      ,DELETED_DATE_FISCAL_MONTH_START_DATE           AS DELETED_DATE_FISCAL_MONTH_START_DATE
      ,DELETED_DATE_FISCAL_MONTH_END_DATE             AS DELETED_DATE_FISCAL_MONTH_END_DATE
     FROM CTE_DELTA_MONTH_END_TRNSACTION_DV DIS_OPP
     UNION ALL
     SELECT 
       SNAP.OPPORTUNITY_HASHKEY                       AS OPPORTUNITY_HASHKEY
      ,SNAP.OPPORTUNITY_ID                            AS OPPORTUNITY_ID
      ,DT_CR.FISCAL_MONTH                             AS CREATED_DATE_FISCAL_MONTH
      ,DT_CR.FISCAL_MONTH_START_DATE                  AS CREATED_DATE_FISCAL_MONTH_START_DATE
      ,DT_CR.FISCAL_MONTH_END_DATE                    AS CREATED_DATE_FISCAL_MONTH_END_DATE
      ,SNAP.CREATED_DATE                              AS CREATED_DATE
      ,TO_DATE('9999-12-31','YYYY-MM-DD')             AS DV_HARD_DELETED_DATE
      ,TO_DATE('9999-12-31','YYYY-MM-DD')             AS DELETED_DATE_FISCAL_MONTH_START_DATE
      ,TO_DATE('9999-12-31','YYYY-MM-DD')             AS DELETED_DATE_FISCAL_MONTH_END_DATE
     FROM identifier($SNAPSHOT_TABLE_FULL_QUALIFIER) SNAP
     LEFT JOIN CTE_DATE_DIM DT_CR 
     ON (SNAP.CREATED_DATE = DT_CR.DATE)
     WHERE 1=1
     AND SNAP.DATE_KEY=$DELTA_MAX_SNAP_DATE_KEY
   ) DIS_OPP
   GROUP BY 
     DIS_OPP.OPPORTUNITY_HASHKEY                      
    ,DIS_OPP.OPPORTUNITY_ID                           
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH                
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_START_DATE     
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_END_DATE       
    ,DIS_OPP.CREATED_DATE                             
),
CTE_MONTHLY_TRNS_EXPLODE AS
(
   SELECT 
     DIS_OPP.OPPORTUNITY_HASHKEY
    ,DIS_OPP.OPPORTUNITY_ID
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_START_DATE
    ,DIS_OPP.CREATED_DATE_FISCAL_MONTH_END_DATE
    ,DIS_OPP.CREATED_DATE
    ,DIS_OPP.DV_HARD_DELETED_DATE
    ,DIS_OPP.DELETED_DATE_FISCAL_MONTH_START_DATE
    ,DIS_OPP.DELETED_DATE_FISCAL_MONTH_END_DATE
    ,T.DATE
    ,T.DATE_KEY
    ,T.FISCAL_DATE
    ,T.FISCAL_YEAR
    ,T.FISCAL_QUARTER
    ,T.FISCAL_QUARTER_START_DATE
    ,T.FISCAL_QUARTER_END_DATE
    ,T.FISCAL_MONTH
    ,T.FISCAL_MONTH_START_DATE
    ,T.FISCAL_MONTH_END_DATE
    ,T.FISCAL_QTR_STRT_IND
    ,T.FISCAL_QTR_END_IND
    ,T.FISCAL_MO_STRT_IND
    ,T.FISCAL_MO_END_IND
  FROM CTE_DIS_OPP DIS_OPP
  CROSS JOIN CTE_MONTH_DIM_CUSTOM T 
  WHERE 1=1
  AND T.FISCAL_MONTH_END_DATE >= DIS_OPP.CREATED_DATE_FISCAL_MONTH_END_DATE
  AND T.FISCAL_MONTH_END_DATE < DIS_OPP.DELETED_DATE_FISCAL_MONTH_END_DATE
),
CTE_MONTH_SNAPSHOT_COPY_OVER
AS
(
  SELECT   
       DV.OPPORTUNITY_HASHKEY               AS OPPORTUNITY_HASHKEY
      ,DV.OPPORTUNITY_ID                    AS OPPORTUNITY_ID
      ,DV.CREATED_DATE                      AS CREATED_DATE
      ,DT_CR.FISCAL_MONTH                   AS CREATED_DATE_FISCAL_MONTH
      ,DT_CR.FISCAL_MONTH_START_DATE        AS CREATED_DATE_FISCAL_MONTH_START_DATE
      ,DT_CR.FISCAL_MONTH_END_DATE          AS CREATED_DATE_FISCAL_MONTH_END_DATE
      ,DV.DV_HARD_DELETED_DATE              AS DV_HARD_DELETED_DATE
      ,DV.FISCAL_QUARTER_START_DATE         AS FISCAL_QUARTER_START_DATE
      ,DV.FISCAL_QUARTER_END_DATE           AS FISCAL_QUARTER_END_DATE
      ,DV.FISCAL_MONTH_START_DATE           AS FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE             AS FISCAL_MONTH_END_DATE
      ,DV.DATE_KEY                          AS DATE_KEY
      ,DV.FISCAL_MONTH                      AS FISCAL_MONTH
      ,DV.LOAD_DATE_TIMESTAMP               AS LOAD_DATE_TIMESTAMP
      ,DV.LAST_MODIFIED_TIMESTAMP           AS LAST_MODIFIED_TIMESTAMP
      ,DV.SYSTEM_MODSTAMP                   AS SYSTEM_MODSTAMP
      ,DV.NAME                              AS NAME
      ,DV.SOURCED_BY                        AS SOURCED_BY
      ,DV.STAGE_NAME                        AS STAGE_NAME
      ,DV.TYPE                              AS TYPE
      ,DV.LEAD_SOURCE                       AS LEAD_SOURCE
      ,DV.CLOSE_DATE                        AS CLOSE_DATE
      ,DV.FORECAST_SALES_ACV                AS FORECAST_SALES_ACV
      ,DV.INFLUENCED_BY                     AS INFLUENCED_BY
      ,DV.INFLUENCED_VALUE_CUSTOMER_SUCCESS AS INFLUENCED_VALUE_CUSTOMER_SUCCESS
      ,DV.INFLUENCED_VALUE_MARKETING        AS INFLUENCED_VALUE_MARKETING
      ,DV.INFLUENCED_VALUE_PARTNER          AS INFLUENCED_VALUE_PARTNER
      ,DV.INFLUENCED_VALUE_SDR              AS INFLUENCED_VALUE_SDR
      ,DV.ACCOUNT_ID						AS ACCOUNT_ID
      ,DV.OWNER_ID							AS OWNER_ID
      ,DV.ROWTYPE                           AS ROWTYPE
      ,NULL                                 AS IS_DELETED
      ,NULL                                 AS DV_HARD_DELETED
      ,1                                    AS PR
  FROM identifier($SNAPSHOT_TABLE_FULL_QUALIFIER) DV
  LEFT JOIN CTE_DATE_DIM DT_CR 
  ON (DV.CREATED_DATE = DT_CR.DATE)
  WHERE 1=1
  AND DV.DATE_KEY=$DELTA_MAX_SNAP_DATE_KEY
),
CTE_MONTHLY_SNAPSHOT_DELTA_TRANSACTION
AS
(
  SELECT 
       DV.OPPORTUNITY_HASHKEY               AS OPPORTUNITY_HASHKEY
      ,DV.OPPORTUNITY_ID                    AS OPPORTUNITY_ID
      ,DV.CREATED_DATE                      AS CREATED_DATE
      ,DV.FISCAL_MONTH                      AS CREATED_DATE_FISCAL_MONTH
      ,DV.FISCAL_MONTH_START_DATE           AS CREATED_DATE_FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE             AS CREATED_DATE_FISCAL_MONTH_END_DATE
      ,DV.DV_HARD_DELETED_DATE              AS DV_HARD_DELETED_DATE
      ,DV.FISCAL_QUARTER_START_DATE         AS FISCAL_QUARTER_START_DATE
      ,DV.FISCAL_QUARTER_END_DATE           AS FISCAL_QUARTER_END_DATE
      ,DV.FISCAL_MONTH_START_DATE           AS FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE             AS FISCAL_MONTH_END_DATE
      ,DV.DATE_KEY                          AS DATE_KEY
      ,DV.FISCAL_MONTH                      AS FISCAL_MONTH
      ,DV.LOAD_DATE_TIMESTAMP               AS LOAD_DATE_TIMESTAMP
      ,DV.LAST_MODIFIED_TIMESTAMP           AS LAST_MODIFIED_TIMESTAMP
      ,DV.SYSTEM_MODSTAMP                   AS SYSTEM_MODSTAMP
      ,DV.NAME                              AS NAME
      ,DV.SOURCED_BY                        AS SOURCED_BY
      ,DV.STAGE_NAME                        AS STAGE_NAME
      ,DV.TYPE                              AS TYPE
      ,DV.LEAD_SOURCE                       AS LEAD_SOURCE
      ,DV.CLOSE_DATE                        AS CLOSE_DATE
      ,DV.FORECAST_SALES_ACV                AS FORECAST_SALES_ACV
      ,DV.INFLUENCED_BY                     AS INFLUENCED_BY
      ,DV.INFLUENCED_VALUE_CUSTOMER_SUCCESS AS INFLUENCED_VALUE_CUSTOMER_SUCCESS
      ,DV.INFLUENCED_VALUE_MARKETING        AS INFLUENCED_VALUE_MARKETING
      ,DV.INFLUENCED_VALUE_PARTNER          AS INFLUENCED_VALUE_PARTNER
      ,DV.INFLUENCED_VALUE_SDR              AS INFLUENCED_VALUE_SDR
      ,DV.ACCOUNT_ID						AS ACCOUNT_ID
      ,DV.OWNER_ID							AS OWNER_ID
      ,CAST(NULL AS VARCHAR(30))            AS ROWTYPE
      ,DV.IS_DELETED                        AS IS_DELETED
      ,DV.DV_HARD_DELETED                   AS DV_HARD_DELETED
      ,2                                    AS PR
  FROM CTE_DELTA_MONTH_END_TRNSACTION_DV DV
  WHERE 1=1
  AND DV.RN=1
),
CTE_MONTH_SNAPSHOT_COPY_OVER_DELTA_TRANSACTION_COMBINED AS
(
  SELECT 
       DV.OPPORTUNITY_HASHKEY               AS OPPORTUNITY_HASHKEY
      ,DV.OPPORTUNITY_ID                    AS OPPORTUNITY_ID
      ,DV.CREATED_DATE                      AS CREATED_DATE
      ,DV.FISCAL_MONTH                      AS CREATED_DATE_FISCAL_MONTH
      ,DV.FISCAL_MONTH_START_DATE           AS CREATED_DATE_FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE             AS CREATED_DATE_FISCAL_MONTH_END_DATE
      ,DV.DV_HARD_DELETED_DATE              AS DV_HARD_DELETED_DATE
      ,DV.FISCAL_QUARTER_START_DATE         AS FISCAL_QUARTER_START_DATE
      ,DV.FISCAL_QUARTER_END_DATE           AS FISCAL_QUARTER_END_DATE
      ,DV.FISCAL_MONTH_START_DATE           AS FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE             AS FISCAL_MONTH_END_DATE
      ,DV.DATE_KEY                          AS DATE_KEY
      ,DV.FISCAL_MONTH                      AS FISCAL_MONTH
      ,DV.LOAD_DATE_TIMESTAMP               AS LOAD_DATE_TIMESTAMP
      ,DV.LAST_MODIFIED_TIMESTAMP           AS LAST_MODIFIED_TIMESTAMP
      ,DV.SYSTEM_MODSTAMP                   AS SYSTEM_MODSTAMP
      ,DV.NAME                              AS NAME
      ,DV.SOURCED_BY                        AS SOURCED_BY
      ,DV.STAGE_NAME                        AS STAGE_NAME
      ,DV.TYPE                              AS TYPE
      ,DV.LEAD_SOURCE                       AS LEAD_SOURCE
      ,DV.CLOSE_DATE                        AS CLOSE_DATE
      ,DV.FORECAST_SALES_ACV                AS FORECAST_SALES_ACV
      ,DV.INFLUENCED_BY                     AS INFLUENCED_BY
      ,DV.INFLUENCED_VALUE_CUSTOMER_SUCCESS AS INFLUENCED_VALUE_CUSTOMER_SUCCESS
      ,DV.INFLUENCED_VALUE_MARKETING        AS INFLUENCED_VALUE_MARKETING
      ,DV.INFLUENCED_VALUE_PARTNER          AS INFLUENCED_VALUE_PARTNER
      ,DV.INFLUENCED_VALUE_SDR              AS INFLUENCED_VALUE_SDR
      ,DV.ACCOUNT_ID						AS ACCOUNT_ID
      ,DV.OWNER_ID							AS OWNER_ID
      ,DV.ROWTYPE                           AS ROWTYPE
      ,DV.IS_DELETED                        AS IS_DELETED
      ,DV.DV_HARD_DELETED                   AS DV_HARD_DELETED
      ,DV.PR                                AS PR
  FROM CTE_MONTHLY_SNAPSHOT_DELTA_TRANSACTION DV
  UNION ALL
  SELECT 
       DV.OPPORTUNITY_HASHKEY               AS OPPORTUNITY_HASHKEY
      ,DV.OPPORTUNITY_ID                    AS OPPORTUNITY_ID
      ,DV.CREATED_DATE                      AS CREATED_DATE
      ,DV.FISCAL_MONTH                      AS CREATED_DATE_FISCAL_MONTH
      ,DV.FISCAL_MONTH_START_DATE           AS CREATED_DATE_FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE             AS CREATED_DATE_FISCAL_MONTH_END_DATE
      ,DV.DV_HARD_DELETED_DATE              AS DV_HARD_DELETED_DATE
      ,DV.FISCAL_QUARTER_START_DATE         AS FISCAL_QUARTER_START_DATE
      ,DV.FISCAL_QUARTER_END_DATE           AS FISCAL_QUARTER_END_DATE
      ,DV.FISCAL_MONTH_START_DATE           AS FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE             AS FISCAL_MONTH_END_DATE
      ,DV.DATE_KEY                          AS DATE_KEY
      ,DV.FISCAL_MONTH                      AS FISCAL_MONTH
      ,DV.LOAD_DATE_TIMESTAMP               AS LOAD_DATE_TIMESTAMP
      ,DV.LAST_MODIFIED_TIMESTAMP           AS LAST_MODIFIED_TIMESTAMP
      ,DV.SYSTEM_MODSTAMP                   AS SYSTEM_MODSTAMP
      ,DV.NAME                              AS NAME
      ,DV.SOURCED_BY                        AS SOURCED_BY
      ,DV.STAGE_NAME                        AS STAGE_NAME
      ,DV.TYPE                              AS TYPE
      ,DV.LEAD_SOURCE                       AS LEAD_SOURCE
      ,DV.CLOSE_DATE                        AS CLOSE_DATE
      ,DV.FORECAST_SALES_ACV                AS FORECAST_SALES_ACV
      ,DV.INFLUENCED_BY                     AS INFLUENCED_BY
      ,DV.INFLUENCED_VALUE_CUSTOMER_SUCCESS AS INFLUENCED_VALUE_CUSTOMER_SUCCESS
      ,DV.INFLUENCED_VALUE_MARKETING        AS INFLUENCED_VALUE_MARKETING
      ,DV.INFLUENCED_VALUE_PARTNER          AS INFLUENCED_VALUE_PARTNER
      ,DV.INFLUENCED_VALUE_SDR              AS INFLUENCED_VALUE_SDR
      ,DV.ACCOUNT_ID						AS ACCOUNT_ID
      ,DV.OWNER_ID							AS OWNER_ID
      ,DV.ROWTYPE                           AS ROWTYPE
      ,DV.IS_DELETED                        AS IS_DELETED
      ,DV.DV_HARD_DELETED                   AS DV_HARD_DELETED
      ,DV.PR                                AS PR
  FROM CTE_MONTH_SNAPSHOT_COPY_OVER DV
),
CTE_DELTA_MONTHLY_SNAPSHOT_TR_GEN AS
(
  SELECT 
       DATE_DIM.OPPORTUNITY_HASHKEY                             AS OPPORTUNITY_HASHKEY_EXPLD
      ,DATE_DIM.OPPORTUNITY_ID                                  AS OPPORTUNITY_ID_EXPLD
      ,DATE_DIM.CREATED_DATE                                    AS CREATED_DATE_EXPLD
      ,DATE_DIM.DV_HARD_DELETED_DATE                            AS DV_HARD_DELETED_DATE_EXPLD
      ,DATE_DIM.DELETED_DATE_FISCAL_MONTH_START_DATE            AS DELETED_DATE_FISCAL_MONTH_START_DATE_EXPLD
      ,DATE_DIM.DELETED_DATE_FISCAL_MONTH_END_DATE              AS DELETED_DATE_FISCAL_MONTH_END_DATE_EXPLD
      ,DATE_DIM.DATE_KEY                                        AS DATE_KEY_EXPLD
      ,DATE_DIM.FISCAL_MONTH                                    AS FISCAL_MONTH_EXPLD
      ,DATE_DIM.FISCAL_MONTH_START_DATE                         AS FISCAL_MONTH_START_DATE_EXPLD
      ,DATE_DIM.FISCAL_MONTH_END_DATE                           AS FISCAL_MONTH_END_DATE_EXPLD
      ,DATE_DIM.FISCAL_MO_STRT_IND                              AS FISCAL_MO_STRT_IND
      ,DATE_DIM.FISCAL_MO_END_IND                               AS FISCAL_MO_END_IND
      ,DATE_DIM.FISCAL_QUARTER_START_DATE                       AS FISCAL_QUARTER_START_DATE_EXPLD
      ,DATE_DIM.FISCAL_QUARTER_END_DATE                         AS FISCAL_QUARTER_END_DATE_EXPLD
      ,DV.OPPORTUNITY_HASHKEY
      ,DV.OPPORTUNITY_ID
      ,DV.LOAD_DATE_TIMESTAMP
      ,DV.FISCAL_MONTH
      ,DV.FISCAL_MONTH_START_DATE
      ,DV.FISCAL_MONTH_END_DATE
      ,DV.SYSTEM_MODSTAMP 
      ,DV.LAST_MODIFIED_TIMESTAMP
      ,DV.CREATED_DATE
      ,DV.CLOSE_DATE
      ,DV."NAME"
      ,DV.SOURCED_BY
      ,DV.STAGE_NAME
      ,DV."TYPE"
      ,DV.LEAD_SOURCE
      ,DV.FORECAST_SALES_ACV
      ,DV.INFLUENCED_BY
      ,DV.INFLUENCED_VALUE_CUSTOMER_SUCCESS
      ,DV.INFLUENCED_VALUE_MARKETING
      ,DV.INFLUENCED_VALUE_PARTNER
      ,DV.INFLUENCED_VALUE_SDR
      ,DV.ACCOUNT_ID
      ,DV.OWNER_ID
      ,CASE 
        WHEN DV.RowType IS NOT NULL THEN DV.RowType
        WHEN DV.RowType IS NULL AND DV.OPPORTUNITY_HASHKEY IS NULL THEN 'Generated' 
        ELSE 'Transaction' 
       END AS RowType
      ,CASE
        WHEN DV.PR IS NULL THEN 2
        ELSE DV.PR
       END AS PR
  FROM CTE_MONTHLY_TRNS_EXPLODE DATE_DIM
  LEFT JOIN 
  (
    SELECT * FROM CTE_MONTH_SNAPSHOT_COPY_OVER_DELTA_TRANSACTION_COMBINED WHERE 1 = 1 
  ) DV
  ON (DV.FISCAL_MONTH_END_DATE = DATE_DIM.FISCAL_MONTH_END_DATE AND DV.OPPORTUNITY_HASHKEY = DATE_DIM.OPPORTUNITY_HASHKEY)
  WHERE 1=1
),
CTE_DELTA_MONTH_SNAPSHOT_FILL_MISSING_MONTHS AS
(
  SELECT 
    OPPORTUNITY_HASHKEY_EXPLD                                           AS OPPORTUNITY_HASHKEY,
    OPPORTUNITY_ID_EXPLD                                                AS OPPORTUNITY_ID,
    CREATED_DATE_EXPLD                                                  AS CREATED_DATE,
    DV_HARD_DELETED_DATE_EXPLD                                          AS DV_HARD_DELETED_DATE,
    FISCAL_QUARTER_START_DATE_EXPLD                                     AS FISCAL_QUARTER_START_DATE,
    FISCAL_QUARTER_END_DATE_EXPLD                                       AS FISCAL_QUARTER_END_DATE,
    FISCAL_MONTH_START_DATE_EXPLD                                       AS FISCAL_MONTH_START_DATE,
    FISCAL_MONTH_END_DATE_EXPLD                                         AS FISCAL_MONTH_END_DATE,
    DATE_KEY_EXPLD                                                      AS DATE_KEY,
    FISCAL_MONTH_EXPLD                                                  AS FISCAL_MONTH,
    FISCAL_MO_END_IND                                                   AS FISCAL_MO_END_IND,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(LOAD_DATE_TIMESTAMP) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE LOAD_DATE_TIMESTAMP
    END AS LOAD_DATE_TIMESTAMP,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(SYSTEM_MODSTAMP) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE SYSTEM_MODSTAMP
    END AS SYSTEM_MODSTAMP,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(LAST_MODIFIED_TIMESTAMP) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE LAST_MODIFIED_TIMESTAMP
    END AS LAST_MODIFIED_TIMESTAMP,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE("NAME") IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE "NAME"
    END AS "NAME",
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(SOURCED_BY) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE SOURCED_BY
    END AS SOURCED_BY,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(STAGE_NAME) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE STAGE_NAME
    END AS STAGE_NAME,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE("TYPE") IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE "TYPE"
    END AS "TYPE",
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(LEAD_SOURCE) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE LEAD_SOURCE
    END AS LEAD_SOURCE,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(CLOSE_DATE) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE CLOSE_DATE
    END AS CLOSE_DATE,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(FORECAST_SALES_ACV) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE FORECAST_SALES_ACV
    END AS FORECAST_SALES_ACV,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(INFLUENCED_BY) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE INFLUENCED_BY
    END AS INFLUENCED_BY,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(INFLUENCED_VALUE_CUSTOMER_SUCCESS) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE INFLUENCED_VALUE_CUSTOMER_SUCCESS
    END AS INFLUENCED_VALUE_CUSTOMER_SUCCESS,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(INFLUENCED_VALUE_MARKETING) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE INFLUENCED_VALUE_MARKETING
    END AS INFLUENCED_VALUE_MARKETING,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(INFLUENCED_VALUE_PARTNER) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE INFLUENCED_VALUE_PARTNER
    END AS INFLUENCED_VALUE_PARTNER,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(INFLUENCED_VALUE_SDR) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE INFLUENCED_VALUE_SDR
    END AS INFLUENCED_VALUE_SDR,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(ACCOUNT_ID) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE ACCOUNT_ID
    END AS ACCOUNT_ID,
    CASE
      WHEN RowType='Generated' AND PR > 1
      THEN LAST_VALUE(OWNER_ID) IGNORE NULLS OVER (PARTITION BY OPPORTUNITY_HASHKEY_EXPLD ORDER BY FISCAL_MONTH_END_DATE_EXPLD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)
      ELSE OWNER_ID
    END AS OWNER_ID,
    RowType,
  	PR
    FROM CTE_DELTA_MONTHLY_SNAPSHOT_TR_GEN DV
)
SELECT 
   OPPORTUNITY_HASHKEY                      
  ,OPPORTUNITY_ID                           
  ,CREATED_DATE                             
  ,DV_HARD_DELETED_DATE                     
  ,FISCAL_QUARTER_START_DATE                
  ,FISCAL_QUARTER_END_DATE                  
  ,FISCAL_MONTH_START_DATE                  
  ,FISCAL_MONTH_END_DATE                    
  ,DATE_KEY                                 
  ,FISCAL_MONTH                             
  ,FISCAL_MO_END_IND                        
  ,LOAD_DATE_TIMESTAMP                      
  ,LAST_MODIFIED_TIMESTAMP                  
  ,SYSTEM_MODSTAMP                          
  ,"NAME"                                   
  ,SOURCED_BY                               
  ,STAGE_NAME                               
  ,"TYPE"                                   
  ,LEAD_SOURCE                              
  ,CLOSE_DATE                               
  ,FORECAST_SALES_ACV                       
  ,INFLUENCED_BY                            
  ,INFLUENCED_VALUE_CUSTOMER_SUCCESS        
  ,INFLUENCED_VALUE_MARKETING               
  ,INFLUENCED_VALUE_PARTNER                 
  ,INFLUENCED_VALUE_SDR
  ,ACCOUNT_ID
  ,OWNER_ID
  ,ROWTYPE 
  ,PR
FROM CTE_DELTA_MONTH_SNAPSHOT_FILL_MISSING_MONTHS
WHERE 1=1
AND LOAD_DATE_TIMESTAMP IS NOT NULL
;




USE  ${EnvVarTargetDatabase};

-- # Incremental Snapshot Table Generation #

SET DELTA_SNAPSHOT_TABLE= '${JobVarSnapshotTableDelta}';
SET DELTA_SNAPSHOT_SCHEMA= '${JobVarSnapshotSchema}';
SET DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER=$DELTA_SNAPSHOT_SCHEMA||'.'||$DELTA_SNAPSHOT_TABLE; 

-- # Snapshot Table Frame #

SET SNAPSHOT_TABLE= '${JobVarSnapshotTable}';
SET SNAPSHOT_SCHEMA= '${JobVarSnapshotSchema}';
SET SNAPSHOT_TABLE_FULL_QUALIFIER=$SNAPSHOT_SCHEMA||'.'||$SNAPSHOT_TABLE;

DELETE FROM identifier($SNAPSHOT_TABLE_FULL_QUALIFIER)
WHERE FISCAL_MONTH_END_DATE IN 
(
  SELECT DISTINCT FISCAL_MONTH_END_DATE FROM identifier($DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER)
  WHERE PR > 1
);

INSERT INTO identifier($SNAPSHOT_TABLE_FULL_QUALIFIER)
(
   OPPORTUNITY_HASHKEY                      
  ,OPPORTUNITY_ID                           
  ,CREATED_DATE                             
  ,DV_HARD_DELETED_DATE                     
  ,FISCAL_QUARTER_START_DATE                
  ,FISCAL_QUARTER_END_DATE                  
  ,FISCAL_MONTH_START_DATE                  
  ,FISCAL_MONTH_END_DATE                    
  ,DATE_KEY                                 
  ,FISCAL_MONTH                             
  ,FISCAL_MO_END_IND                        
  ,LOAD_DATE_TIMESTAMP                      
  ,LAST_MODIFIED_TIMESTAMP                  
  ,SYSTEM_MODSTAMP                          
  ,"NAME"                                   
  ,SOURCED_BY                               
  ,STAGE_NAME                               
  ,"TYPE"                                   
  ,LEAD_SOURCE                              
  ,CLOSE_DATE                               
  ,FORECAST_SALES_ACV                       
  ,INFLUENCED_BY                            
  ,INFLUENCED_VALUE_CUSTOMER_SUCCESS        
  ,INFLUENCED_VALUE_MARKETING               
  ,INFLUENCED_VALUE_PARTNER                 
  ,INFLUENCED_VALUE_SDR
  ,ACCOUNT_ID
  ,OWNER_ID
  ,ROWTYPE 
)
SELECT
   OPPORTUNITY_HASHKEY                      
  ,OPPORTUNITY_ID                           
  ,CREATED_DATE                             
  ,DV_HARD_DELETED_DATE                     
  ,FISCAL_QUARTER_START_DATE                
  ,FISCAL_QUARTER_END_DATE                  
  ,FISCAL_MONTH_START_DATE                  
  ,FISCAL_MONTH_END_DATE                    
  ,DATE_KEY                                 
  ,FISCAL_MONTH                             
  ,FISCAL_MO_END_IND                        
  ,LOAD_DATE_TIMESTAMP                      
  ,LAST_MODIFIED_TIMESTAMP                  
  ,SYSTEM_MODSTAMP                          
  ,"NAME"                                   
  ,SOURCED_BY                               
  ,STAGE_NAME                               
  ,"TYPE"                                   
  ,LEAD_SOURCE                              
  ,CLOSE_DATE                               
  ,FORECAST_SALES_ACV                       
  ,INFLUENCED_BY                            
  ,INFLUENCED_VALUE_CUSTOMER_SUCCESS        
  ,INFLUENCED_VALUE_MARKETING               
  ,INFLUENCED_VALUE_PARTNER                 
  ,INFLUENCED_VALUE_SDR
  ,ACCOUNT_ID
  ,OWNER_ID
  ,ROWTYPE 
FROM identifier($DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER)
WHERE 1=1
AND PR > 1
;

COMMIT;


USE  ${EnvVarTargetDatabase};

-- # Incremental Snapshot Table Generation #

SET DELTA_SNAPSHOT_TABLE= '${JobVarSnapshotTableDelta}';
SET DELTA_SNAPSHOT_SCHEMA= '${JobVarSnapshotSchema}';
SET DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER=$DELTA_SNAPSHOT_SCHEMA||'.'||$DELTA_SNAPSHOT_TABLE; 

-- # Snapshot Table Frame #

SET SNAPSHOT_TABLE= '${JobVarSnapshotTable}';
SET SNAPSHOT_SCHEMA= '${JobVarSnapshotSchema}';
SET SNAPSHOT_TABLE_FULL_QUALIFIER=$SNAPSHOT_SCHEMA||'.'||$SNAPSHOT_TABLE;

-- # Delete Records Snapshot Table Frame #

SET DELETE_DATE_ADJ_TABLE= 'DELETE_${JobVarSnapshotTableDelta}';
SET DELETE_DATE_ADJ_SCHEMA= '${JobVarSnapshotSchema}';
SET DELETE_DATE_ADJ_TABLE_FULL_QUALIFIER=$DELETE_DATE_ADJ_SCHEMA||'.'||$DELETE_DATE_ADJ_TABLE;

-- # Deleted Haskeys in Delta Period #

DROP TABLE IF EXISTS identifier($DELETE_DATE_ADJ_TABLE_FULL_QUALIFIER);
CREATE TABLE identifier($DELETE_DATE_ADJ_TABLE_FULL_QUALIFIER)
AS
SELECT OPPORTUNITY_HASHKEY,MAX(DV_HARD_DELETED_DATE) AS DV_HARD_DELETED_DATE
FROM identifier($DELTA_SNAPSHOT_TABLE_FULL_QUALIFIER)
WHERE 1=1
AND DV_HARD_DELETED_DATE < TO_DATE('9999-12-31','YYYY-MM-DD')
GROUP BY OPPORTUNITY_HASHKEY
;    

-- # Update DV_HARD_DELETED_DATE retrospectively in Weekly Snapshot Table #

MERGE INTO identifier($SNAPSHOT_TABLE_FULL_QUALIFIER) TGT
USING identifier($DELETE_DATE_ADJ_TABLE_FULL_QUALIFIER) SRC
ON (TGT.OPPORTUNITY_HASHKEY = SRC.OPPORTUNITY_HASHKEY)
WHEN MATCHED THEN UPDATE
SET 
TGT.DV_HARD_DELETED_DATE = SRC.DV_HARD_DELETED_DATE
;

COMMIT;
